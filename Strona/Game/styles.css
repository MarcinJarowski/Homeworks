:root {
  font-family: Impact, Haettenschweiler, "Arial Narrow Bold", sans-serif;
}
#gameWindow {
  width: 900px;
  height: 600px;
  border: 2px solid red;
  background-color: #f5f3f1;
  position: relative;
}
#startWindow {
  border: 1px solid #000;
  width: 900px;
  height: 600px;
  position: absolute;
  top: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  background-color: red;
  z-index: 2;
}
.gameInstruction {
  text-align: center;
  line-height: 40px;
  font-size: 24px;
}
.startGame {
  padding: 20px 30px;
  font-size: 20px;
  border-radius: 10px;
}
#points {
  font-size: 40px;
  width: 180px;
  margin: 20px;
}
#lose {
  border: 1px solid #000;
  width: 900px;
  height: 600px;
  position: absolute;
  top: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  background-color: red;
  z-index: -999;
}
.scoreAndName {
  width: 500px;
  height: 300px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}
.scoreAndName h1 {
  font-size: 50px;
}
#yourPoints {
  font-size: 30px;
}
.scoreAndName button {
  padding: 10px 30px;
  border: 1px solid #fff;
  border-radius: 10px;
  background-color: #fff;
}
#nameInput {
  text-align: center;
  padding: 10px;
  border: 1px solid #fff;
  border-radius: 10px;
  font-size: 16px;
}
.bomb {
  width: 56px;
  height: 56px;
  position: absolute;
}
.cat {
  width: 50px;
  height: 50px;
  color: #000;
  position: absolute;
}
.gameInstruction {
  text-align: center;
}

#scoresTable {
  border: 1px solid #000;
  width: 900px;
  height: 600px;
  position: absolute;
  top: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  background-color: #4286f4;
  z-index: -999;
}

#ranking {
  margin: auto;
  padding: 0;
  height: 100%;
  list-style: none;
  width: 400px;
  display: flex;
  flex-direction: column;
  text-align: center;
  justify-content: space-evenly;
}
#ranking li {
  border: 2px solid #000;
  display: grid;
  text-align: center;
  grid-template-columns: 20% 60% 20%;
  justify-content: space-evenly;
}
#ranking li:first-child p:first-child {
  height: 20px;
  padding: 10px;
  background-color: gold;
  width: 20px;
  margin: auto;
  border-radius: 50%;
}
#ranking li:nth-child(2) p:first-child {
  height: 20px;
  width: 20px;
  padding: 8px;
  background-color: chocolate;
  margin: auto;
  border-radius: 50%;
}
#ranking li:nth-child(3) p:first-child {
  height: 20px;
  width: 20px;
  padding: 6px;
  background-color: silver;
  margin: auto;
  border-radius: 50%;
}
.player {
  display: grid;
  grid-template-columns: 20% 40% 40%;
  overflow: hidden;
  margin: 0;
  font-size: 26px;
  padding: 10px;
}

.info {
  display: grid;
  text-align: center;
  grid-template-columns: 20% 40% 40%;
  font-size: 30px;
  margin: 0 15px;
}
.player-place {
  display: flex;
  justify-content: center;
}
.player-place .circle {
  height: 30px;
  width: 30px;
  border-radius: 50%;
  border: 1px solid gold;
}

/* //   if (localStorage.getItem("scoresTable") == null) {
  //     //jezeli nie ma scoresTable
  //     let firstTimeSave = JSON.stringify([playerObject]);
  //     localStorage.setItem("scoresTable", firstTimeSave); //zrob pusty array
  //   } else {
  //     let scoresBeforeParse = localStorage.getItem("scoresTable"); //json pobrany
  //     let scoresToObject = JSON.parse(scoresBeforeParse); //konwersja w obiekt
  //     let objectsArray = Array.from(scoresToObject);
  //     objectsArray.push(playerObject); //dodanie obiektu playera do arraya
  //     let updatedArrayReadyToSet = JSON.stringify(objectsArray); //array do wyslania
  //     localStorage.setItem("scoresTable", updatedArrayReadyToSet); //wysyla array
  //   }
  // } */

/* //   if (localStorage.getItem("scoresTable") == null) {
    //     //jezeli nie ma scoresTable
    //     let firstTimeSave = JSON.stringify([playerObject]);
    //     localStorage.setItem("scoresTable", firstTimeSave); //zrob pusty array
    //   } else {
    //     let scoresBeforeParse = localStorage.getItem("scoresTable"); //json pobrany
    //     let scoresToObject = JSON.parse(scoresBeforeParse); //konwersja w obiekt
    //     let objectsArray = Array.from(scoresToObject);
    //     objectsArray.push(playerObject); //dodanie obiektu playera do arraya
    //     let updatedArrayReadyToSet = JSON.stringify(objectsArray); //array do wyslania
    //     localStorage.setItem("scoresTable", updatedArrayReadyToSet); //wysyla array
    //   }
    // } */
